import unittest
from tummi import *

# FORMAT:
# t[0] = filename
# t[1] = MD5 (expected)
# t[2] = SHA256 (expected)

l = [
        ["test_packed.exe",
         "75f99e4dfa9447f1119d43ca7864390d",
         "6d0ad972cb2bb53e164d26f1eaf490f1aea1c51e10f7f5bff24e9f56474161cd"]
        ,
        ["ransomwarePACKED.py",
         "5c8bb83b50f8d563ee6fb98eae55390f",
         "71e37cbd9a4df10e360b89121c8ad1c943501ef1d82aa6a73559ec9336b154ab"]
    ]

packed_folder = "../Testing Ransomware (Packed)/"

def check_types(index, correct_type):
    mismatched_names = [t[index] for t in l if type(t[index]) != correct_type]
    if mismatched_names:
        raise AttributeError(f"{mismatched_names[0]} should be of type {correct_type}.")


class TestMalware(unittest.TestCase):

    def testing_hashes(self):
        for t in l:
            test_name = f"Testing MD5 of {t[0]}..."
            filepath = packed_folder + t[0]
            print(test_name)
            with self.subTest(msg = test_name):
                hashes = filehashes(filepath)
                self.assertEqual(hashes, (t[1], t[2]))


if __name__ == '__main__':
    check_types(0, str)
    check_types(1, str)
    check_types(2, str)
    unittest.main()
